---
title: Monitor your model
execute:
  echo: false
---

```{python}
#| include: false
#| tags: [parameters]
import pins
from IPython.display import display, Markdown, IFrame
from datetime import datetime, timedelta
import pandas as pd
import plotly.express as px
from sklearn import metrics
from vetiver import VetiverModel, compute_metrics, plot_metrics
from sklearn.metrics import recall_score, accuracy_score

raw = "https://colorado.rstudio.com/rsc"
paths = {"chicago-model-python": "chicago-model-python/"}
board = pins.board_url(raw, paths, allow_pickle_read=True)
```

```{python}
v = VetiverModel.from_pin(board, "chicago-model-python")
v_meta = board.pin_meta("chicago-model-python")
```

```{python}
days_old = datetime.today() - datetime.strptime(v_meta.created, "%Y%m%dT%H%M%SZ")
display(Markdown(f"""
The `{v.model_name}` model is {days_old.days} days old.
"""))
```

```{python}
inspections_new = pd.read_parquet("../data/inspections_monitoring.parquet")
inspections_new["inspection_date"] = pd.to_datetime(inspections_new["inspection_date"])
inspections_new["month"] = inspections_new["inspection_date"].dt.month
inspections_new["year"] = inspections_new["inspection_date"].dt.year

inspections_new["preds"] = v.model.predict(
    inspections_new.drop(columns=["results", "aka_name", "inspection_date"])
)

inspections_new["preds"] = inspections_new["preds"].map({"PASS": 0, "FAIL": 1})
inspections_new["results"] = inspections_new["results"].map({"PASS": 0, "FAIL": 1})
```



### Model metrics

```{python}
td = timedelta(weeks = 4)
metric_set = [accuracy_score, recall_score]

metrics_df = compute_metrics(
    data = inspections_new,
    date_var = "inspection_date", 
    period = td,
    metric_set = metric_set,
    truth = "results",
    estimate = "preds"
  )
metrics_df
```

```{python}
plot_metrics(metrics_df).show()
```

Plot model metrics over time to *monitor* your model.

### Explore validation data

```{python}
inspections_new.head()
```

```{python}
px.histogram(inspections_new, x = "month", color="facility_type", title = "Inspections per month by facility type")
```

Write your own code to make visualizations or tables with the new validation data, and/or the new predictions.

### API visual documentation

Interact directly with your model via its visual documentation, and get `curl` examples.

```{python}
IFrame('https://colorado.posit.co/rsc/chicago-inspections-python/', width=700, height=350)
```

